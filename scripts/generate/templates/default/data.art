import type { FormSchemaGetter } from '#/adapter/form';
import type { VxeGridProps } from '#/adapter/vxe-table';

import { DictEnum } from '@vben/constants';

import { renderDict } from '#/utils/render';<{if ext.customFormComponentList && ext.customFormComponentList.length > 0}>

// 自定义表单组件
<{each ext.customFormComponentList}>import <{capitalize($value.componentName)}> from './components/<{$value.componentName}>.vue';
<{/each}><{/if}><{if ext.customViewComponentList && ext.customViewComponentList.length > 0}>

// 自定义列表组件
<{each ext.customViewComponentList}>import <{capitalize($value.componentName)}> from './components/<{$value.componentName}>.vue';
<{/each}><{/if}>

export const querySchema: FormSchemaGetter = () => [
<{each columns}><{if $value.isQuery == '1'}>
  {
    component: '<{if $value.htmlType == 'input'}>Input<{else if $value.htmlType == 'select'}>Select<{else if $value.htmlType == 'radio'}>RadioGroup<{else if $value.htmlType == 'checkbox'}>CheckboxGroup<{else if $value.htmlType == 'datetime'}>DatePicker<{else if $value.htmlType == 'textarea'}>Textarea<{else}>Input<{/if}>',
    fieldName: '<{$value.javaField}>',
    label: '<{$value.columnComment}>',
  },
<{/if}><{/each}>
];

export const columns: VxeGridProps['columns'] = [
  { type: 'checkbox', width: 60 },
<{each columns}><{if $value.isList == '1'}>
  {
    title: '<{$value.columnComment}>',
    field: '<{$value.javaField}>',<{if $value.dictType}>
    width: 120,
    slots: {
      default: ({ row }) => {
        return renderDict(row.<{$value.javaField}>, DictEnum.<{$value.dictType}>);
      },
    },<{/if}><{if $value.columnName == 'create_time' || $value.columnName == 'update_time'}>
    width: 180,<{/if}>
  },
<{/if}><{/each}>
  {
    field: 'action',
    fixed: 'right',
    slots: { default: 'action' },
    title: '操作',
    width: 180,
  },
];

export const modalSchema: FormSchemaGetter = () => [
<{each columns}><{if $value.isInsert == '1' && $value.isPk != '1'}>
  {
    component: '<{if $value.htmlType == 'input'}>Input<{else if $value.htmlType == 'select'}>Select<{else if $value.htmlType == 'radio'}>RadioGroup<{else if $value.htmlType == 'checkbox'}>CheckboxGroup<{else if $value.htmlType == 'datetime'}>DatePicker<{else if $value.htmlType == 'textarea'}>Textarea<{else}>Input<{/if}>',
    fieldName: '<{$value.javaField}>',
    label: '<{$value.columnComment}>',<{if $value.isRequired == '1'}>
    rules: 'required',<{/if}><{if $value.dictType}>
    componentProps: {
      options: DictEnum.<{$value.dictType}>,
    },<{/if}>
  },
<{/if}><{/each}>];